<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jayymall.mappers.MemberMapper">

	<!-- MemberVO 가져오기 -->
	<select id="readUserInfo" parameterType="string" resultType="MemberVO">
		select  mem_id, mem_name, mem_pw, mem_email, mem_accept_e, mem_tel, mem_zipcode, mem_basicadd, mem_detailadd,
		mem_nickname, mem_point, mem_joindate, mem_update, mem_lastlogin, mem_authcode
		from member_tbl
		where mem_id = #{mem_id}
	</select> 

	<!-- 회원가입 -->
	<insert id="join" parameterType="MemberVO">
		insert into member_tbl(MEM_ID, MEM_NAME, MEM_PW, MEM_EMAIL, MEM_ZIPCODE,
			MEM_BASICADD, MEM_DETAILADD, MEM_TEL, MEM_NICKNAME, MEM_ACCEPT_E)
		values(#{mem_id}, #{mem_name}, #{mem_pw}, #{mem_email}, #{mem_zipcode},
			#{mem_basicadd}, #{mem_detailadd}, #{mem_tel}, #{mem_nickname}, #{mem_accept_e})
	</insert>
	
	<!-- 아이디 중복 체크 -->
	<select id="checkIdDuplicate" parameterType="string" resultType="int">
		select count(*)
		from member_tbl
		where mem_id = #{mem_id}
	</select>
	
	<!-- 로그인 -->
	<select id="login" parameterType="MemberDTO" resultType="MemberDTO">
		select mem_id, mem_pw, mem_nickname, mem_name, mem_point, mem_lastlogin
		from member_tbl
		where mem_id = #{mem_id}
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="modifyUserInfo" parameterType="MemberVO" >
		update member_tbl
		set mem_name=#{mem_name}, mem_nickname=#{mem_nickname}, mem_email=#{mem_email},
			mem_tel=#{mem_tel}, mem_zipcode=#{mem_zipcode}, mem_basicadd=#{mem_basicadd}, 
			mem_detailadd=#{mem_detailadd}, mem_accept_e=#{mem_accept_e}, mem_update=sysdate
		where mem_id=#{mem_id}	
	</update>
	
	<!-- 비밀번호 변경 -->
	<update id="changePw" parameterType="MemberDTO">
		update member_tbl
		set mem_pw = #{mem_pw}
		where mem_id=#{mem_id}
	</update>
	
	<!-- 회원 탈퇴 -->
	<delete id="deleteUser" parameterType="string">
		delete from member_tbl
		where mem_id=#{mem_id}
	</delete>
	
	<!-- 로그인 시간 업데이트 -->
	<update id="loginUpdate" parameterType="string">
		update member_tbl
		set mem_lastlogin = sysdate
		where mem_id = #{mem_id}	
	</update>
	
	<!-- 로그인 정보 쿠키 저장 -->
	<update id="saveCookie" parameterType="Map">
		update member_tbl
		set mem_session_key = #{mem_session_key},
			mem_session_limit = #{mem_session_limit}
		where mem_id = #{mem_id}
	</update>
	
	<!-- 쿠키에 저장된 세션값으로 로그인 정보 가져오기 -->
	<select id="checkUserSession" parameterType="string" resultType="MemberVO">
		select *
		from member_tbl
		where mem_session_key = #{value} and mem_session_limit > now()
	</select>
		
</mapper>